= form_for(object, html: {class: 'uk-form-stacked uk-margin'}) do |f|
  = f.label :title, class: 'uk-form-label'
  .uk-form-controls= f.text_field :title, class: 'uk-input'
  = f.label :content, class: 'uk-form-label'
  .uk-form-controls= f.text_area :content, class: 'uk-input'
  = f.label :journey_time, class: 'uk-form-label'
  .uk-form-controls= f.datetime_select :journey_time, class: 'uk-select'
  = f.fields_for :categories do |category|
    = category.label :name
    = category.text_field :name
  .uk-margin
    %input.uk-input#address{type: 'textbox', value: '東京駅'}
    %input.uk-button.uk-button-default{type: 'button', value: '地図検索', onclick: 'codeAddress()'}
  #map.uk-margin{style: 'width: 100%; height: 320px;'}
  = f.label :lat, class: 'uk-form-label'
  .uk-form-controls#lat-value{data: {lat: object.lat}}= f.text_field :lat, class: 'uk-input uk-form-small disabled'
  = f.label :lng, class: 'uk-form-label'
  .uk-form-controls#lng-value{data: {lng: object.lng}}= f.text_field :lng, class: 'uk-input uk-form-small disabled'
  .field.uk-margin
    - if object.image?
      .uk-width-large
        = image_tag object.image.url
    .uk-form-controls= f.file_field :image
    = f.hidden_field :image_cache
  .field.uk-margin
    - if object.persisted? && object.image?
      = f.label '写真を削除する場合、以下にチェックを入れてください', class: 'uk-form-label uk-text-danger'
      .uk-form-controls= f.check_box :remove_image, class: 'uk-checkbox'
  = f.submit '登録', class: 'uk-button uk-button-primary uk-margin'

=render 'layouts/google_map_api'
:javascript
  var geocoder;
  var map;
  var lng = document.getElementById('lng-value');
  var lng_value = parseFloat(lng.getAttribute("data-lng"));
  var lat = document.getElementById('lat-value');
  var lat_value = parseFloat(lat.getAttribute("data-lat"));

  function init() {
    geocoder = new google.maps.Geocoder();
    var latlng = new google.maps.LatLng(lat_value, lng_value);
    var mapOptions = {
      zoom: 12,
      center: latlng
    };
    map = new google.maps.Map(document.getElementById('map'), mapOptions);
    var marker = new google.maps.Marker({
      map: map,
      position: {lat: lat_value, lng: lng_value}
    });
  }

  function codeAddress() {
    var address = document.getElementById('address').value;
    geocoder.geocode({'address': address}, function(results, status) {
      if(status == 'OK') {
        map.setCenter(results[0].geometry.location);

        // 地図にマーカーを付ける
        var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        });

        // 緯度、経度のフォームを更新する
        lng.children[0].value = results[0].geometry.location.lng();
        lat.children[0].value = results[0].geometry.location.lat();
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }

  window.onload = function () {
    init();
  };
